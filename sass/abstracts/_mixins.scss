@mixin breakpoint($value) {
  @if type-of($value) == "string" {
    @if ($value == "xs" or $value == "phone") {
      @media (max-width: 699px) {
        @content;
      }
    } @else if ($value == "sm" or $value == "tablet") {
      @media (min-width: 700px) {
        @content;
      }
    } @else if ($value == "md" or $value == "laptop") {
      @media (min-width: 980px) {
        @content;
      }
    } @else if ($value == "lg" or $value == "desktop") {
      @media (min-width: 1140px) {
        @content;
      }
    } @else if ($value == "xl" or $value == "tvscreen") {
      @media (min-width: 1260px) {
        @content;
      }
    } @else {
      @warn "Breakpoint mixin supports: xs or phone, sm or tablet, md pr laptop, lg or desktop, xl or tvscreen as string variable";
    }
  } @else if is-length($value) {
    @media (min-width: #{$value}) {
      @content;
    }
  } @else {
    @warn "Breakpoint mixin supports: string variables or relative units";
  }
}

@mixin generateJustifyContentClasses() {
  $values: flex-start, flex-end, center, space-between, space-around,
    space-evenly, initial, inherit;
  @each $value in $values {
    &.justify-content-#{$value} {
      justify-content: $value;
    }
  }
}

@mixin generateAlignItemsClasses() {
  $values: stretch, flex-start, flex-end, center, baseline, initial, inherit;
  @each $value in $values {
    &.align-items-#{$value} {
      align-items: $value;
    }
  }
}

@mixin generateColClasses() {
    $sizes: xs, sm, md, lg, xl;

    @each $size in $sizes{
        @include breakpoint($size){
            @for $i from 1 through 12 {
                &.col__#{$size}__#{$i}{
                    width: clac($i/12 * 100%);
                }
            }
        }
    }
}

@mixin generateFontSizeClasses($rootFontSize){
    $multipliers: (
        xs: 0.75,
        sm: 0.9,
        md: 1, 
        lg: 1.5, 
        xl: 2,
    )
}
